doctype html
html lang="en"
  head
    meta charset="utf-8"
    meta name="viewport" content="width=device-width, initial-scale=1.0"
    title
      = content_for?(:title) ? yield(:title) : "UNDP"
    = stylesheet_link_tag    "prototype"
    link href="https://api.mapbox.com/mapbox.js/v2.3.0/mapbox.css" rel="stylesheet"
    = csrf_meta_tags
  body
    = render partial: 'shared/svg_declarations'
    .container
      .l-map
        #map
        = link_to (image_tag 'undp-logo-gradient.png', id: "logo"), "/prototype"
        #map-legend
          ul
            li.title
              = t('front.relationships')
            li.js-actor-to-action
              svg.icon.-large.-monochrome
                use xlink:href="#actorToActionIcon" x="0" y="4"
              = t('front.actor_to_action')
            li.js-actor-to-actor
              svg.icon.-large.-monochrome
                use xlink:href="#actorToActorIcon" x="0" y="4"
              = t('front.actor_to_actor')
            li.js-action-to-action
              svg.icon.-large.-monochrome
                use xlink:href="#actionToActionIcon" x="0" y="4"
              = t('front.action_to_action')
          ul
            li.title
              = t('front.actor')
            li
              svg.icon.-actor
                use xlink:href="#macroMarkerIcon" x="-6" y="-6"
              | Macro
            li
              svg.icon.-actor
                use xlink:href="#mesoMarkerIcon" x="-4.5" y="-4"
              | Meso
            li
              svg.icon.-actor
                use xlink:href="#microMarkerIcon" x="-5" y="-3"
              | Micro
          ul
            li.title
              = t('front.action')
            li
              svg.icon.-action
                use xlink:href="#macroMarkerIcon" x="-6" y="-6"
              | Macro
            li
              svg.icon.-action
                use xlink:href="#mesoMarkerIcon" x="-4.5" y="-4"
              | Meso
            li
              svg.icon.-action
                use xlink:href="#microMarkerIcon" x="-5" y="-3"
              | Micro
        #map-slider
          a.slider-controls.js-play-button
            .left
            .right
            .triangle1
            .triangle2
          .slider
            .slider-tooltip.-hidden.js-timeline-tooltip
              | -
            svg
              g transform="translate(12 11)"
                / Firefox needs the height and width being specified
                rect.timeline.js-timeline x="0" y="0" height="3" width="260" rx="1.5" ry="1.5"
                g.handle-container
                  circle.handle r="7.5" cx="0" cy="1.5"

        #map-buttons
          .checkbox.-reversed.-negative
            input type="checkbox" class="js-relationships-checkbox" id="map-relationships-toggle"
            label class="label" for="map-relationships-toggle"
              = t('front.relationships_graph')
      aside.l-sidebar#sidebar aria-hidden="false" role="navigation"
        .message.-error.global-error.js-global-error._hidden
        a.toggleswitch href="#sidebar" role="button" aria-label="sidebar" aria-controls="navigation" aria-expanded="true"
        ul.tab-navigation role="tablist"
            li.tab.-active data-tab="overall"
              a.link href="#overall-tab" role="tab"
                = t('front.overall')
            li.tab data-tab="about"
              a.link href="#about-tab"  role="tab"
                = t('front.about')

        /! TODO: update the structure
        #overall-tab data-content="overall" role="tabpanel" aria-labelledby="overall-tab"
          #sidebar-action-toolbar-view
            .button.-textual.js-back._hidden aria-hidden="true" aria-label="Back button"
              svg.icon.-marginright width="10" height="18"
                use xlink:href="#backArrowIcon" x="0" y="0"
              = t('front.back')
            /! TODO: aria tags (aria-controls)
            .button.-textual.js-account
              - if current_user
                = [current_user.firstname, current_user.lastname].join(' ')
                ul.popover-menu.js-account-popover._hidden
                  li.item
                    a.link.js-searches = t('front.searches')
                  li.item
                    = link_to t('front.edit_account'), edit_user_registration_path(current_user),
                      class: "link"
                  li.item
                    = button_to destroy_user_session_path, class: "link", method: 'delete' do
                      = t('front.log_out')
              - else
                = t('front.account')
                ul.popover-menu.js-account-popover._hidden
                  li.item
                    = link_to t('front.log_in'), new_user_session_path, class: 'link'
                  li.item
                    = link_to t('front.sign_in'), new_user_registration_path, class: 'link'
              svg.icon.-marginleft width="24" height="24"
                use xlink:href="#logInIcon" x="0" y="0"
          .pane-collection
            #sidebar-filters-view.l-sidebar-filters.pane.-fixed aria-label="sidebar filters" aria-hidden="false"
              form.content
                ul.accordion role="tablist"
                  li.section
                    input#filtersSection0.toggle-button type="checkbox" value="" style="display: none;"
                    label#filtersTab0.title for="filtersSection0" aria-label="toggle type filter" aria-controls="filtersPanel0" = t('front.show_all')
                    #filtersPanel0.content.js-content data-filter="type" aria-hidden="true"
                      select.js-input name="types" disabled="disabled" multiple="multiple" style="display:none;"
                        option value="actors" selected="selected" = t('front.actors')
                        option value="actions" selected="selected" = t('front.actions')
                      .form-input
                        input#markersTypeActors.input.-checkbox type="checkbox" value="actors" checked="checked"
                        label.label for="markersTypeActors" = t('front.actors')
                      .form-input
                        input#markersTypeActions.input.-checkbox type="checkbox" value="actions" checked="checked"
                        label.label for="markersTypeActions" = t('front.actions')
                  li.section
                    input#filtersSection1.toggle-button type="checkbox" value="" style="display: none;"
                    label#filtersTab1.title for="filtersSection1" aria-label="toggle level filter" aria-controls="filtersPanel1"
                      = t('front.levels')
                      span.notification-badge.js-badge = t('front.all')
                    #filtersPanel1.content.js-content aria-hidden="true"
                      select.js-input name="levels" disabled="disabled" multiple="multiple" style="display:none;"
                        option value="macro" selected="selected"
                          | Macro
                        option value="meso" selected="selected"
                          | Meso
                        option value="micro" selected="selected"
                          | Micro
                      .form-input
                        input#levelsMacro.input.-checkbox type="checkbox" value="macro" checked="checked"
                        label.label for="levelsMacro"
                          | Macro
                      .form-input
                        input#levelsMeso.input.-checkbox type="checkbox" value="meso" checked="checked"
                        label.label for="levelsMeso"
                          | Meso
                      .form-input
                        input#levelsMicro.input.-checkbox type="checkbox" value="micro" checked="checked"
                        label.label for="levelsMicro"
                          | Micro
                  li.section
                    input#filtersSection2.toggle-button type="checkbox" value="" style="display: none;"
                    label#filtersTab2.title for="filtersSection2" aria-label="toggle 3x5 filter" aria-controls="filtersPanel2"
                      = t('front.3x5')
                      span.notification-badge.js-badge = t('front.all')
                    #filtersPanel2.content.js-content aria-hidden="true"
                      select.js-input name="3x5_ids" disabled="disabled" multiple="multiple" style="display:none;"
                        -@socio_cultural_domains.each do |socio_cultural_domain|
                          option value="#{socio_cultural_domain.id}" selected="selected" = socio_cultural_domain.name
                      -@socio_cultural_domains.each do |socio_cultural_domain|
                        .form-input
                          input.input.-checkbox id="domains#{socio_cultural_domain.id}" type="checkbox" value="#{socio_cultural_domain.id}" checked="checked"
                          label.label.js-3x5 data-id="#{socio_cultural_domain.id}" for="domains#{socio_cultural_domain.id}" = socio_cultural_domain.name
                      button.button.-outlined.-small._floatright.js-check-all type="button"
                        svg.icon.-marginright width="10" height="10"
                          use xlink:href="#checkIcon" x="0" y="0"
                        span = t('front.check_all')
                      button.button.-outlined.-small.js-uncheck-all type="button"
                        svg.icon.-marginright width="10" height="10"
                          use xlink:href="#uncheckIcon" x="0" y="0"
                        span = t('front.uncheck_all')
                  li.section
                    input#filtersSection3.toggle-button type="checkbox" value="" style="display: none;"
                    label#filtersTab2.title for="filtersSection3" aria-label="toggle 3xX filter" aria-controls="filtersPanel3"
                      = t('front.3xX')
                      span.notification-badge.js-badge = t('front.all')
                    #filtersPanel3.content.js-content aria-hidden="true"
                      select.js-input name="3xX_ids" disabled="disabled" multiple="multiple" style="display:none;"
                        -@other_domains.each do |other_domain|
                          option value="#{other_domain.id}" selected="selected" = other_domain.name
                      -@other_domains.each do |other_domain|
                        .form-input
                          input.input.-checkbox id="domains#{other_domain.id}" type="checkbox" value="#{other_domain.id}" checked="checked"
                          label.label.js-3xX data-id="#{other_domain.id}" for="domains#{other_domain.id}" = other_domain.name
                      button.button.-outlined.-small._floatright.js-check-all type="button"
                        svg.icon.-marginright width="10" height="10"
                          use xlink:href="#checkIcon" x="0" y="0"
                        span = t('front.check_all')
                      button.button.-outlined.-small.js-uncheck-all type="button"
                        svg.icon.-marginright width="10" height="10"
                          use xlink:href="#uncheckIcon" x="0" y="0"
                        span = t('front.uncheck_all')

                .form-input
                    label.label for="startDate" = t('front.start_date')
                    input.input.-small.-calendaricon.js-input.js-date type="text" placeholder="MM/DD/YYYY" name="start_date" id="startDate"
                .form-input
                    label.label for="endDate" = t('front.end_date')
                    input.input.-small.-calendaricon.js-input.js-date type="text" placeholder="MM/DD/YYYY" name="end_date" id="endDate"
                button.button.-outlined.js-reset type="button" = t('front.reset')
                button.button.js-apply type="submit" = t('front.apply')
                .message.-error._hidden.js-error aria-hidden="true" = t('front.cant_apply_search_0_check')

              .content.-secondary
                .searches
                  - if current_user
                    button.button.js-save-search.save-button data-success="#{ t('front.successfully_saved') }" = t('front.save_search')
                  - else
                    p = t('front.connect_to_save_search_html')
                    button.button.-secondary = t('front.save_search')
            #sidebar-actor-view.pane.-hidden.l-sidebar-actor aria-label="sidebar actor detail" aria-hidden="true"
            #sidebar-action-view.pane.-hidden.l-sidebar-action aria-label="sidebar action detail" aria-hidden="true"
            #sidebar-searches-view.pane.-hidden.l-sidebar-searches aria-label="sidebar searches" aria-hidden="true"
        #about-tab._hidden data-content="about" role="tabpanel" aria-labelledby="about-tab" aria-hidden="true"
          | About content

    script src="https://api.mapbox.com/mapbox.js/v2.3.0/mapbox.js"
    = Gon::Base.render_data
    = javascript_include_tag "prototype"
